{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/custom-validation.service.ts","./src/app/auth/forgetpassword/forgetpassword.component.ts","./src/app/auth/forgetpassword/forgetpassword.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/otp/otp.component.ts","./src/app/auth/otp/otp.component.html","./src/app/auth/resetpassword/resetpassword.component.ts","./src/app/auth/resetpassword/resetpassword.component.html","./src/app/auth/setpassword/setpassword.component.ts","./src/app/auth/setpassword/setpassword.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material/material.module';\nimport { ForgetpasswordComponent } from './forgetpassword/forgetpassword.component';\nimport { LoginComponent } from './login/login.component';\nimport { OtpComponent } from './otp/otp.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { SetpasswordComponent } from './setpassword/setpassword.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  {\n    path: 'forgetpassword',\n    component: ForgetpasswordComponent\n  },\n  {\n    path: 'resetpassword',\n    component: ResetpasswordComponent\n  },\n  {\n    path: 'otpscreen',\n    component: OtpComponent\n  },\n  {\n    path: 'setpassword',\n    component: SetpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule, MaterialModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgetpasswordComponent } from './forgetpassword/forgetpassword.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { OtpComponent } from './otp/otp.component';\nimport { NgOtpInputModule } from 'ng-otp-input';\nimport { SetpasswordComponent } from './setpassword/setpassword.component';\n\n\n@NgModule({\n\tdeclarations: [LoginComponent, SignupComponent, ForgetpasswordComponent, ResetpasswordComponent, OtpComponent, SetpasswordComponent],\n\timports: [\n\t\tCommonModule,\n\t\tAuthRoutingModule,\n\t\tReactiveFormsModule,\n\t\tNgOtpInputModule\n\t],\n\tproviders : []\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidationService {\n\n  constructor() { }\n\n  passwordMatchValidator(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (\n        confirmPasswordControl.errors &&\n        !confirmPasswordControl.errors.passwordMismatch\n      ) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n          return true;\n      } else {\n        confirmPasswordControl.setErrors(null);\n          return null;\n      }\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { NotificationsService } from 'src/app/_services/notifications.service';\nimport { validEmail } from 'src/app/_validators/validEmail';\n\n@Component({\n\tselector: 'app-forgetpassword',\n\ttemplateUrl: './forgetpassword.component.html',\n\tstyleUrls: ['./forgetpassword.component.scss']\n})\nexport class ForgetpasswordComponent implements OnInit {\n\tforgotPassword: FormGroup;\n\tisLoading: boolean = false;\n\tconstructor(public router: Router, private _auth: AuthService, private _fb: FormBuilder, private _noti: NotificationsService) { }\n\n\tngOnInit() {\n\t\tthis.forgotPassword = this._fb.group({\n\t\t\temail: [null, [Validators.required, Validators.email, validEmail]]\n\t\t})\n\t}\n\n\tforgotNow() {\n\t\tif (this.forgotPassword.valid) {\n\t\t\tif (this.forgotPassword.controls.email.value) {\n\t\t\t\tthis.forgotPassword.controls.email.setValue(this.forgotPassword.controls.email.value.trim());\n\t\t\t}\n\t\t\tthis.isLoading = true;\n\t\t\tthis._auth.forgot(this.forgotPassword.value).subscribe(res => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis._auth.otpEmail = this.forgotPassword.controls.email.value\n\t\t\t\tthis._noti.show('success', res.message,\"Otp\");\n\t\t\t\tthis.router.navigate(['/auth/otpscreen']);\n\t\t\t}, _ => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t})\n\t\t} else {\n\t\t\tthis.forgotPassword.markAllAsTouched();\n\t\t}\n\t}\n}\n","<main class=\"admin-main  \">\n    <div class=\"auth_module\" style=\"background-image: url('assets/img/auth.jpeg');\">\n        <form class=\"mx-auto center_auth\" [formGroup]=\"forgotPassword\" (ngSubmit)=\"forgotNow()\">\n            <div class=\"p-b-20 text-center\">\n                <figure class=\"logo-auth\"><img src=\"assets/img/nav-logo.png\" alt=\"Logo\"></figure>\n            </div>\n            <div class=\"form-row mb-2\">\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput placeholder=\"Enter email address\" formControlName=\"email\">\n                    <mat-error\n                        *ngIf=\"!forgotPassword.get('email').hasError('validEmail') && forgotPassword.get('email').hasError('required')\">\n                        Please enter email.\n                    </mat-error>\n                    <mat-error\n                        *ngIf=\"forgotPassword.get('email').hasError('email') || forgotPassword.get('email').hasError('validEmail')\">\n                        Please enter valid email.\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-block btn-lg\" [attr.disabled]=\"(isLoading)?true : null\">{{\n                (isLoading)?'Submitting...':'Submit' }}</button>\n            <p class=\"text-right p-t-10\">\n                <a routerLink=\"/auth/login\" class=\"text-underline\">Back to Login</a>\n            </p>\n        </form>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { NotificationsService } from 'src/app/_services/notifications.service';\nimport { validEmail } from 'src/app/_validators/validEmail';\n\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\tloginForm: FormGroup;\n\tisLoading: boolean = false;\n\tconstructor(public router: Router, private _auth: AuthService, private _fb: FormBuilder, private _noti: NotificationsService) { }\n\n\tngOnInit() {\n\t\tthis.loginForm = this._fb.group({\n\t\t\temail: [null, [Validators.required, Validators.email, validEmail]],\n\t\t\tpassword: [null, Validators.required],\n\t\t\tdeviceType: [\"WEB\"]\n\t\t})\n\t}\n\n\tloginNow() {\n\t\tif (this.loginForm.controls.email.value) {\n\t\t\tthis.loginForm.controls.email.setValue(this.loginForm.controls.email.value.trim());\n\t\t}\n\t\tif (this.loginForm.valid) {\n\t\t\tthis.isLoading = true;\n\t\t\tthis._auth.login(this.loginForm.value).subscribe(res => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis._noti.show('success', \"Admin logged in successfully.\", \"Login!\");\n\t\t\t\tthis.router.navigate(['/dashboard']);\n\t\t\t}, error => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t})\n\t\t} else {\n\t\t\tthis.loginForm.markAllAsTouched();\n\t\t}\n\t}\n}\n","<main class=\"admin-main\">\n    <div class=\"auth_module\" style=\"background-image: url('assets/img/auth.jpeg');\">\n        <form class=\"mx-auto center_auth\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginNow()\">\n            <div class=\"p-b-20 text-center\">\n                <figure class=\"logo-auth\"><img src=\"assets/img/nav-logo.png\" alt=\"Logo\"></figure>\n            </div>\n            <div class=\"form-row\">\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input matInput placeholder=\"Enter email address\" formControlName=\"email\">\n                    <mat-error\n                        *ngIf=\"!loginForm.get('email').hasError('validEmail') && loginForm.get('email').hasError('required')\">\n                        Please enter email.\n                    </mat-error>\n                    <mat-error\n                        *ngIf=\"loginForm.get('email').hasError('email') || loginForm.get('email').hasError('validEmail')\">\n                        Please enter valid email.\n                    </mat-error>\n                </mat-form-field>\n\n\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input [type]=\"'password'\" formControlName=\"password\" name=\"password\" matInput\n                        placeholder=\"Password\">\n                    <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">Please enter password.\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-block btn-lg\" [attr.disabled]=\"(isLoading)?true : null\">{{\n                (isLoading)?'Processing...':'Login' }}</button>\n            <p class=\"text-right p-t-10\">\n                <a routerLink=\"/auth/forgetpassword\" class=\"text-underline\">Forgot Password?</a>\n            </p>\n        </form>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { NotificationsService } from 'src/app/_services/notifications.service';\n\n@Component({\n  selector: 'app-otp',\n  templateUrl: './otp.component.html',\n  styleUrls: ['./otp.component.scss']\n})\nexport class OtpComponent implements OnInit {\n  otpvalue: any;\n  OtpForm: FormGroup;\n\tisLoading: boolean = false;\n  constructor(private fb:FormBuilder,private service:AuthService,private _noti: NotificationsService,private router:Router) { }\n\n  ngOnInit(): void {\nthis.OtpForm = this.fb.group({\n  otp:['']\n})\n  }\n  onOtpChange(event)\n  {\n    this.otpvalue = event\n    console.log(this.otpvalue);\n}\nVerifyOtp(){\n  let url = `admin/verify-otp/`\n  let obj = {\n    \"email\":this.service.otpEmail,\n    \"otp\":this.otpvalue}\n    this.service.postApi(url,obj).subscribe((res:any)=>{\n      console.log('Verify otp',res);\n      if(res.code==200){\n        this._noti.show('success', res.message,\"Verification\");\n\t\t\t\tthis.router.navigate(['/auth/setpassword']);\n      }else{\n        this._noti.show('Failed', res.message,\"Verification\");\n      }\n    }) \n}\n}\n","<main class=\"admin-main\">\n    <div class=\"auth_module\" style=\"background-image: url('assets/img/auth.jpeg');\">\n        <form class=\"mx-auto center_auth\" [formGroup]=\"OtpForm\">\n            <div class=\"text-center mb-5\">\n                <figure class=\"logo-auth\"><img src=\"assets/img/nav-logo.png\" alt=\"Logo\"></figure>\n            </div>\n            <div class=\"form-group\">\n                <ng-otp-input  (onInputChange)=\"onOtpChange($event)\"  [config]=\"{length:6}\"></ng-otp-input>\n            </div>\n            <div class=\"text-center mt-5\">\n                <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"VerifyOtp()\">{{\n                    (isLoading)?'Processing...':'Submit' }}</button>\n            </div>\n            <p class=\"text-right mt-4\">\n                <a routerLink=\"/auth/forgetpassword\" class=\"text-underline\">Back?</a>\n            </p>\n        </form>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.scss']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>resetpassword works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { CustomValidationService } from 'src/app/auth/custom-validation.service';\nimport { NotificationsService } from 'src/app/_services/notifications.service';\n\n\n@Component({\n  selector: 'app-setpassword',\n  templateUrl: './setpassword.component.html',\n  styleUrls: ['./setpassword.component.scss']\n})\nexport class SetpasswordComponent implements OnInit {\n  newPassword: FormGroup;\n\tisLoading: boolean = false;\n\tconstructor(public router: Router, private _auth: AuthService, private _fb: FormBuilder, private _noti: NotificationsService,private customvalidator:CustomValidationService) { }\n\n\tngOnInit() {\n\t\tthis.newPassword = this._fb.group({\n\t\t\tpassword: [null, [Validators.required,Validators.minLength(8)]],\n      Cnfpassword:['']\n\t\t},{\n      validator:this.customvalidator.passwordMatchValidator(\"password\",\"Cnfpassword\")\n     })\n\t}\n\n\tforgotNow() {\n    let url = `admin/update-password/`\n    let obj = {\n      \"email\":this._auth.otpEmail,\n      \"new_password\":this.newPassword.controls.password.value\n  }\n\t\tif (this.newPassword.valid) {\n\t\t\tif (this.newPassword.controls.password.value) {\n\t\t\t\tthis.newPassword.controls.password.setValue(this.newPassword.controls.password.value.trim());\n\t\t\t}\n  \tthis.isLoading = true;\n\t\t\tthis._auth.postApi(url,obj).subscribe((res:any) => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t\tthis._noti.show('success', res.message,\"Otp\");\n\t\t\t\tthis.router.navigate(['/auth/login']);\n\t\t\t}, _ => {\n\t\t\t\tthis.isLoading = false;\n\t\t\t})\n\t\t} else {\n\t\t\tthis.newPassword.markAllAsTouched();\n\t\t}\n\t}\n}\n","<main class=\"admin-main  \">\n    <div class=\"auth_module\" style=\"background-image: url('assets/img/auth.jpeg');\">\n        <form class=\"mx-auto center_auth\" [formGroup]=\"newPassword\" (ngSubmit)=\"forgotNow()\">\n            <div class=\"p-b-20 text-center\">\n                <figure class=\"logo-auth\"><img src=\"assets/img/nav-logo.png\" alt=\"Logo\"></figure>\n            </div>\n            <div class=\"form-row mb-2\">\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>New password</mat-label>\n                    <input matInput placeholder=\"Enter new password\" formControlName=\"password\" type=\"password\">\n                    <mat-error\n                        *ngIf=\" newPassword.get('password').hasError('required')\">\n                        Please enter password.\n                    </mat-error>\n                    <mat-error\n                        *ngIf=\"newPassword.get('password').hasError('minlength')\">\n                        Minlength should 8.\n                    </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"col-md-12\" appearance=\"outline\">\n                    <mat-label>Confirm password</mat-label>\n                    <input [type]=\"'password'\" formControlName=\"Cnfpassword\" name=\"password\" matInput\n                        placeholder=\"Password\">\n                        <mat-error *ngIf=\"newPassword.get('Cnfpassword').hasError('passwordMismatch')\">\n                        *Password don't match\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-block btn-lg\" [attr.disabled]=\"(isLoading)?true : null\">{{\n                (isLoading)?'Submitting...':'Submit' }}</button>\n            <p class=\"text-right p-t-10\">\n                <a routerLink=\"/auth/login\" class=\"text-underline\">Back to Login</a>\n            </p>\n        </form>\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>signup works!</p>\n"],"sourceRoot":"webpack:///"}